{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './HospitalAdminDashboard.css';\nconst HospitalAdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState('doctors');\n  const [doctors, setDoctors] = useState([]);\n  const [nurses, setNurses] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [hospital, setHospital] = useState(null);\n  const [adminName, setAdminName] = useState('');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newItem, setNewItem] = useState({\n    name: '',\n    email: '',\n    password: '',\n    departmentId: '',\n    specialization: ''\n  });\n  useEffect(() => {\n    const userRole = localStorage.getItem('userRole');\n    const hospitalId = localStorage.getItem('hospitalId');\n    const name = localStorage.getItem('userName');\n    if (userRole !== 'HOSPITAL_ADMIN' || !hospitalId) {\n      navigate('/login');\n      return;\n    }\n    setAdminName(name || '');\n    fetchHospitalDetails(hospitalId);\n    fetchData();\n  }, [navigate]);\n  const fetchHospitalDetails = async hospitalId => {\n    try {\n      const response = await axios.get(`http://localhost:3000/api/auth/hospitals/${hospitalId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setHospital(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch hospital details');\n    }\n  };\n  const fetchData = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const hospitalId = localStorage.getItem('hospitalId');\n      const token = localStorage.getItem('token');\n      if (!hospitalId || !token) {\n        throw new Error('Missing hospital ID or token');\n      }\n\n      // Fetch departments\n      const departmentsResponse = await axios.get(`http://localhost:3000/api/dept/hospital/${hospitalId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (departmentsResponse.data) {\n        setDepartments(departmentsResponse.data);\n      }\n\n      // Fetch doctors\n      const doctorsResponse = await axios.get(`http://localhost:3000/api/doctor/hospital/${hospitalId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (doctorsResponse.data) {\n        setDoctors(doctorsResponse.data);\n      }\n\n      // Fetch nurses\n      const nursesResponse = await axios.get(`http://localhost:3000/api/nurse/hospital/${hospitalId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (nursesResponse.data) {\n        setNurses(nursesResponse.data);\n      }\n    } catch (err) {\n      console.error('Error fetching data:', err);\n      if (err.response) {\n        var _err$response$data2;\n        setError(((_err$response$data2 = err.response.data) === null || _err$response$data2 === void 0 ? void 0 : _err$response$data2.message) || 'Failed to fetch data from server');\n      } else if (err.request) {\n        setError('No response received from server');\n      } else {\n        setError('Error setting up the request');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate('/login');\n  };\n  const handleAddDoctor = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      const hospitalId = localStorage.getItem('hospitalId');\n      const token = localStorage.getItem('token');\n      if (!hospitalId || !token) {\n        throw new Error('Missing hospital ID or token');\n      }\n      const response = await axios.post('http://localhost:3000/api/doctor/create-doctor', {\n        ...newItem,\n        hospitalId,\n        role: 'DOCTOR'\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data) {\n        setDoctors(prev => [...prev, response.data]);\n        setSuccess('Doctor added successfully');\n        setNewItem({\n          name: '',\n          email: '',\n          password: '',\n          departmentId: '',\n          specialization: ''\n        });\n        setShowAddForm(false);\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error adding doctor:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to add doctor');\n    }\n  };\n  const handleAddDepartment = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      const hospitalId = localStorage.getItem('hospitalId');\n      const token = localStorage.getItem('token');\n      if (!hospitalId || !token) {\n        throw new Error('Missing hospital ID or token');\n      }\n      const response = await axios.post('http://localhost:3000/api/dept/create-dept', {\n        name: newItem.name,\n        description: newItem.specialization,\n        hospitalId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data) {\n        setDepartments(prev => [...prev, response.data]);\n        setSuccess('Department added successfully');\n        setNewItem({\n          name: '',\n          email: '',\n          password: '',\n          departmentId: '',\n          specialization: ''\n        });\n        setShowAddForm(false);\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error('Error adding department:', err);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to add department');\n    }\n  };\n  const handleDeleteDoctor = async doctorId => {\n    if (!window.confirm('Are you sure you want to delete this doctor?')) return;\n    try {\n      await axios.delete(`http://localhost:3000/api/doctor/${doctorId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setDoctors(prev => prev.filter(d => d._id !== doctorId));\n      setSuccess('Doctor deleted successfully');\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to delete doctor');\n    }\n  };\n  const handleDeleteDepartment = async departmentId => {\n    if (!window.confirm('Are you sure you want to delete this department?')) return;\n    try {\n      await axios.delete(`http://localhost:3000/api/dept/${departmentId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setDepartments(prev => prev.filter(d => d._id !== departmentId));\n      setSuccess('Department deleted successfully');\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to delete department');\n    }\n  };\n  const handleEditDoctor = async doctorId => {\n    // TODO: Implement edit functionality\n    console.log('Edit doctor:', doctorId);\n  };\n  const handleEditDepartment = async departmentId => {\n    // TODO: Implement edit functionality\n    console.log('Edit department:', departmentId);\n  };\n  const renderDoctorForm = () => {\n    return /*#__PURE__*/React.createElement('div', {\n      className: 'add-form-container'\n    }, /*#__PURE__*/React.createElement('form', {\n      onSubmit: handleAddDoctor,\n      className: 'add-form'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'form-group'\n    }, /*#__PURE__*/React.createElement('input', {\n      type: 'text',\n      placeholder: 'Name',\n      value: newItem.name,\n      onChange: e => setNewItem({\n        ...newItem,\n        name: e.target.value\n      }),\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'form-group'\n    }, /*#__PURE__*/React.createElement('input', {\n      type: 'email',\n      placeholder: 'Email',\n      value: newItem.email,\n      onChange: e => setNewItem({\n        ...newItem,\n        email: e.target.value\n      }),\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'form-group'\n    }, /*#__PURE__*/React.createElement('input', {\n      type: 'password',\n      placeholder: 'Password',\n      value: newItem.password,\n      onChange: e => setNewItem({\n        ...newItem,\n        password: e.target.value\n      }),\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'form-group'\n    }, /*#__PURE__*/React.createElement('input', {\n      type: 'text',\n      placeholder: 'Specialization',\n      value: newItem.specialization,\n      onChange: e => setNewItem({\n        ...newItem,\n        specialization: e.target.value\n      }),\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'form-group'\n    }, /*#__PURE__*/React.createElement('select', {\n      value: newItem.departmentId,\n      onChange: e => setNewItem({\n        ...newItem,\n        departmentId: e.target.value\n      }),\n      required: true\n    }, /*#__PURE__*/React.createElement('option', {\n      value: ''\n    }, 'Select Department'), departments.map(dept => /*#__PURE__*/React.createElement('option', {\n      key: dept._id,\n      value: dept._id\n    }, dept.name)))), /*#__PURE__*/React.createElement('button', {\n      type: 'submit',\n      className: 'submit-btn'\n    }, 'Add Doctor')));\n  };\n  const renderDepartmentForm = () => {\n    return /*#__PURE__*/React.createElement('div', {\n      className: 'add-form-container'\n    }, /*#__PURE__*/React.createElement('form', {\n      onSubmit: handleAddDepartment,\n      className: 'add-form'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'form-group'\n    }, /*#__PURE__*/React.createElement('input', {\n      type: 'text',\n      placeholder: 'Department Name',\n      value: newItem.name,\n      onChange: e => setNewItem({\n        ...newItem,\n        name: e.target.value\n      }),\n      required: true\n    })), /*#__PURE__*/React.createElement('div', {\n      className: 'form-group'\n    }, /*#__PURE__*/React.createElement('textarea', {\n      placeholder: 'Description',\n      value: newItem.specialization,\n      onChange: e => setNewItem({\n        ...newItem,\n        specialization: e.target.value\n      }),\n      required: true\n    })), /*#__PURE__*/React.createElement('button', {\n      type: 'submit',\n      className: 'submit-btn'\n    }, 'Add Department')));\n  };\n  const renderDoctorsList = () => {\n    if (loading) {\n      return /*#__PURE__*/React.createElement('div', {\n        className: 'loading-spinner'\n      }, 'Loading...');\n    }\n    if (error) {\n      return /*#__PURE__*/React.createElement('div', {\n        className: 'error-message'\n      }, error);\n    }\n    return /*#__PURE__*/React.createElement('div', {\n      className: 'doctors-grid'\n    }, doctors.map(doctor => {\n      var _doctor$department;\n      return /*#__PURE__*/React.createElement('div', {\n        key: doctor._id,\n        className: 'doctor-card'\n      }, /*#__PURE__*/React.createElement('div', {\n        className: 'doctor-header'\n      }, /*#__PURE__*/React.createElement('h3', null, doctor.name), /*#__PURE__*/React.createElement('span', {\n        className: `status-badge ${doctor.available ? 'available' : 'unavailable'}`\n      }, doctor.available ? 'Available' : 'Unavailable')), /*#__PURE__*/React.createElement('div', {\n        className: 'doctor-info'\n      }, /*#__PURE__*/React.createElement('p', null, /*#__PURE__*/React.createElement('strong', null, 'Email: '), doctor.email), /*#__PURE__*/React.createElement('p', null, /*#__PURE__*/React.createElement('strong', null, 'Department: '), ((_doctor$department = doctor.department) === null || _doctor$department === void 0 ? void 0 : _doctor$department.name) || 'Not assigned'), /*#__PURE__*/React.createElement('p', null, /*#__PURE__*/React.createElement('strong', null, 'Specialization: '), doctor.specialization)), /*#__PURE__*/React.createElement('div', {\n        className: 'doctor-actions'\n      }, /*#__PURE__*/React.createElement('button', {\n        className: 'edit-btn',\n        onClick: () => handleEditDoctor(doctor._id)\n      }, 'Edit'), /*#__PURE__*/React.createElement('button', {\n        className: 'delete-btn',\n        onClick: () => handleDeleteDoctor(doctor._id)\n      }, 'Delete')));\n    }));\n  };\n  const renderDepartmentsList = () => {\n    if (loading) {\n      return /*#__PURE__*/React.createElement('div', {\n        className: 'loading-spinner'\n      }, 'Loading...');\n    }\n    if (error) {\n      return /*#__PURE__*/React.createElement('div', {\n        className: 'error-message'\n      }, error);\n    }\n    return /*#__PURE__*/React.createElement('div', {\n      className: 'departments-grid'\n    }, departments.map(dept => /*#__PURE__*/React.createElement('div', {\n      key: dept._id,\n      className: 'department-card'\n    }, /*#__PURE__*/React.createElement('div', {\n      className: 'department-header'\n    }, /*#__PURE__*/React.createElement('h3', null, dept.name)), /*#__PURE__*/React.createElement('div', {\n      className: 'department-info'\n    }, /*#__PURE__*/React.createElement('p', null, dept.description)), /*#__PURE__*/React.createElement('div', {\n      className: 'department-actions'\n    }, /*#__PURE__*/React.createElement('button', {\n      className: 'edit-btn',\n      onClick: () => handleEditDepartment(dept._id)\n    }, 'Edit'), /*#__PURE__*/React.createElement('button', {\n      className: 'delete-btn',\n      onClick: () => handleDeleteDepartment(dept._id)\n    }, 'Delete')))));\n  };\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'dashboard-container'\n  }, /*#__PURE__*/React.createElement('header', {\n    className: 'dashboard-header'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'header-content'\n  }, /*#__PURE__*/React.createElement('h1', null, 'Hospital Admin Dashboard'), /*#__PURE__*/React.createElement('button', {\n    className: 'logout-btn',\n    onClick: handleLogout\n  }, 'Logout'))), /*#__PURE__*/React.createElement('div', {\n    className: 'dashboard-stats'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'stat-card'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'stat-icon'\n  }, '👨‍⚕️'), /*#__PURE__*/React.createElement('div', {\n    className: 'stat-info'\n  }, /*#__PURE__*/React.createElement('h3', null, 'Total Doctors'), /*#__PURE__*/React.createElement('p', null, doctors.length))), /*#__PURE__*/React.createElement('div', {\n    className: 'stat-card'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'stat-icon'\n  }, '🏥'), /*#__PURE__*/React.createElement('div', {\n    className: 'stat-info'\n  }, /*#__PURE__*/React.createElement('h3', null, 'Departments'), /*#__PURE__*/React.createElement('p', null, departments.length))), /*#__PURE__*/React.createElement('div', {\n    className: 'stat-card'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'stat-icon'\n  }, '📅'), /*#__PURE__*/React.createElement('div', {\n    className: 'stat-info'\n  }, /*#__PURE__*/React.createElement('h3', null, 'Appointments'), /*#__PURE__*/React.createElement('p', null, '0')))), /*#__PURE__*/React.createElement('div', {\n    className: 'dashboard-content'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'tab-navigation'\n  }, /*#__PURE__*/React.createElement('button', {\n    className: `tab-btn ${activeTab === 'doctors' ? 'active' : ''}`,\n    onClick: () => setActiveTab('doctors')\n  }, 'Doctors'), /*#__PURE__*/React.createElement('button', {\n    className: `tab-btn ${activeTab === 'departments' ? 'active' : ''}`,\n    onClick: () => setActiveTab('departments')\n  }, 'Departments')), /*#__PURE__*/React.createElement('div', {\n    className: 'tab-content'\n  }, activeTab === 'doctors' && /*#__PURE__*/React.createElement('div', {\n    className: 'doctors-section'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'section-header'\n  }, /*#__PURE__*/React.createElement('h2', null, 'Manage Doctors'), /*#__PURE__*/React.createElement('button', {\n    className: 'add-btn',\n    onClick: () => setShowAddForm(!showAddForm)\n  }, showAddForm ? 'Cancel' : 'Add Doctor')), showAddForm && renderDoctorForm(), renderDoctorsList()), activeTab === 'departments' && /*#__PURE__*/React.createElement('div', {\n    className: 'departments-section'\n  }, /*#__PURE__*/React.createElement('div', {\n    className: 'section-header'\n  }, /*#__PURE__*/React.createElement('h2', null, 'Manage Departments'), /*#__PURE__*/React.createElement('button', {\n    className: 'add-btn',\n    onClick: () => setShowAddForm(!showAddForm)\n  }, showAddForm ? 'Cancel' : 'Add Department')), showAddForm && renderDepartmentForm(), renderDepartmentsList()))), success && /*#__PURE__*/React.createElement('div', {\n    className: 'success-message'\n  }, success, /*#__PURE__*/React.createElement('button', {\n    onClick: () => setSuccess('')\n  }, '×')));\n};\n_s(HospitalAdminDashboard, \"BgOC4xnIfxHN1rWqA/QCmjLcE8Y=\", false, function () {\n  return [useNavigate];\n});\n_c = HospitalAdminDashboard;\nexport default HospitalAdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"HospitalAdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","HospitalAdminDashboard","_s","navigate","activeTab","setActiveTab","doctors","setDoctors","nurses","setNurses","departments","setDepartments","error","setError","success","setSuccess","loading","setLoading","hospital","setHospital","adminName","setAdminName","showAddForm","setShowAddForm","newItem","setNewItem","name","email","password","departmentId","specialization","userRole","localStorage","getItem","hospitalId","fetchHospitalDetails","fetchData","response","get","headers","Authorization","data","err","_err$response","_err$response$data","message","token","Error","departmentsResponse","doctorsResponse","nursesResponse","console","_err$response$data2","request","handleLogout","clear","handleAddDoctor","e","preventDefault","post","role","prev","_err$response2","_err$response2$data","handleAddDepartment","description","_err$response3","_err$response3$data","handleDeleteDoctor","doctorId","window","confirm","delete","filter","d","_id","_err$response4","_err$response4$data","handleDeleteDepartment","_err$response5","_err$response5$data","handleEditDoctor","log","handleEditDepartment","renderDoctorForm","createElement","className","onSubmit","type","placeholder","value","onChange","target","required","map","dept","key","renderDepartmentForm","renderDoctorsList","doctor","_doctor$department","available","department","onClick","renderDepartmentsList","length","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Capstone/frontend/src/components/HospitalAdminDashboard.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './HospitalAdminDashboard.css';\r\n\r\nconst HospitalAdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState('doctors');\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [nurses, setNurses] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [hospital, setHospital] = useState(null);\r\n  const [adminName, setAdminName] = useState('');\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [newItem, setNewItem] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    departmentId: '',\r\n    specialization: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    const userRole = localStorage.getItem('userRole');\r\n    const hospitalId = localStorage.getItem('hospitalId');\r\n    const name = localStorage.getItem('userName');\r\n    \r\n    if (userRole !== 'HOSPITAL_ADMIN' || !hospitalId) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n\r\n    setAdminName(name || '');\r\n    fetchHospitalDetails(hospitalId);\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  const fetchHospitalDetails = async (hospitalId) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3000/api/auth/hospitals/${hospitalId}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setHospital(response.data);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to fetch hospital details');\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const hospitalId = localStorage.getItem('hospitalId');\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!hospitalId || !token) {\r\n        throw new Error('Missing hospital ID or token');\r\n      }\r\n\r\n      // Fetch departments\r\n      const departmentsResponse = await axios.get(`http://localhost:3000/api/dept/hospital/${hospitalId}`, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (departmentsResponse.data) {\r\n        setDepartments(departmentsResponse.data);\r\n      }\r\n\r\n      // Fetch doctors\r\n      const doctorsResponse = await axios.get(`http://localhost:3000/api/doctor/hospital/${hospitalId}`, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (doctorsResponse.data) {\r\n        setDoctors(doctorsResponse.data);\r\n      }\r\n\r\n      // Fetch nurses\r\n      const nursesResponse = await axios.get(`http://localhost:3000/api/nurse/hospital/${hospitalId}`, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (nursesResponse.data) {\r\n        setNurses(nursesResponse.data);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.error('Error fetching data:', err);\r\n      if (err.response) {\r\n        setError(err.response.data?.message || 'Failed to fetch data from server');\r\n      } else if (err.request) {\r\n        setError('No response received from server');\r\n      } else {\r\n        setError('Error setting up the request');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleAddDoctor = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const hospitalId = localStorage.getItem('hospitalId');\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!hospitalId || !token) {\r\n        throw new Error('Missing hospital ID or token');\r\n      }\r\n\r\n      const response = await axios.post('http://localhost:3000/api/doctor/create-doctor', {\r\n        ...newItem,\r\n        hospitalId,\r\n        role: 'DOCTOR'\r\n      }, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.data) {\r\n        setDoctors(prev => [...prev, response.data]);\r\n        setSuccess('Doctor added successfully');\r\n        setNewItem({ \r\n          name: '', \r\n          email: '', \r\n          password: '', \r\n          departmentId: '', \r\n          specialization: '' \r\n        });\r\n        setShowAddForm(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error adding doctor:', err);\r\n      setError(err.response?.data?.message || 'Failed to add doctor');\r\n    }\r\n  };\r\n\r\n  const handleAddDepartment = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const hospitalId = localStorage.getItem('hospitalId');\r\n      const token = localStorage.getItem('token');\r\n\r\n      if (!hospitalId || !token) {\r\n        throw new Error('Missing hospital ID or token');\r\n      }\r\n\r\n      const response = await axios.post('http://localhost:3000/api/dept/create-dept', {\r\n        name: newItem.name,\r\n        description: newItem.specialization,\r\n        hospitalId\r\n      }, {\r\n        headers: { \r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.data) {\r\n        setDepartments(prev => [...prev, response.data]);\r\n        setSuccess('Department added successfully');\r\n        setNewItem({ \r\n          name: '', \r\n          email: '', \r\n          password: '', \r\n          departmentId: '', \r\n          specialization: '' \r\n        });\r\n        setShowAddForm(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error adding department:', err);\r\n      setError(err.response?.data?.message || 'Failed to add department');\r\n    }\r\n  };\r\n\r\n  const handleDeleteDoctor = async (doctorId) => {\r\n    if (!window.confirm('Are you sure you want to delete this doctor?')) return;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:3000/api/doctor/${doctorId}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setDoctors(prev => prev.filter(d => d._id !== doctorId));\r\n      setSuccess('Doctor deleted successfully');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to delete doctor');\r\n    }\r\n  };\r\n\r\n  const handleDeleteDepartment = async (departmentId) => {\r\n    if (!window.confirm('Are you sure you want to delete this department?')) return;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:3000/api/dept/${departmentId}`, {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n      });\r\n      setDepartments(prev => prev.filter(d => d._id !== departmentId));\r\n      setSuccess('Department deleted successfully');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Failed to delete department');\r\n    }\r\n  };\r\n\r\n  const handleEditDoctor = async (doctorId) => {\r\n    // TODO: Implement edit functionality\r\n    console.log('Edit doctor:', doctorId);\r\n  };\r\n\r\n  const handleEditDepartment = async (departmentId) => {\r\n    // TODO: Implement edit functionality\r\n    console.log('Edit department:', departmentId);\r\n  };\r\n\r\n  const renderDoctorForm = () => {\r\n    return React.createElement('div', { className: 'add-form-container' },\r\n      React.createElement('form', { onSubmit: handleAddDoctor, className: 'add-form' },\r\n        React.createElement('div', { className: 'form-group' },\r\n          React.createElement('input', {\r\n            type: 'text',\r\n            placeholder: 'Name',\r\n            value: newItem.name,\r\n            onChange: (e) => setNewItem({...newItem, name: e.target.value}),\r\n            required: true\r\n          })\r\n        ),\r\n        React.createElement('div', { className: 'form-group' },\r\n          React.createElement('input', {\r\n            type: 'email',\r\n            placeholder: 'Email',\r\n            value: newItem.email,\r\n            onChange: (e) => setNewItem({...newItem, email: e.target.value}),\r\n            required: true\r\n          })\r\n        ),\r\n        React.createElement('div', { className: 'form-group' },\r\n          React.createElement('input', {\r\n            type: 'password',\r\n            placeholder: 'Password',\r\n            value: newItem.password,\r\n            onChange: (e) => setNewItem({...newItem, password: e.target.value}),\r\n            required: true\r\n          })\r\n        ),\r\n        React.createElement('div', { className: 'form-group' },\r\n          React.createElement('input', {\r\n            type: 'text',\r\n            placeholder: 'Specialization',\r\n            value: newItem.specialization,\r\n            onChange: (e) => setNewItem({...newItem, specialization: e.target.value}),\r\n            required: true\r\n          })\r\n        ),\r\n        React.createElement('div', { className: 'form-group' },\r\n          React.createElement('select', {\r\n            value: newItem.departmentId,\r\n            onChange: (e) => setNewItem({...newItem, departmentId: e.target.value}),\r\n            required: true\r\n          },\r\n            React.createElement('option', { value: '' }, 'Select Department'),\r\n            departments.map(dept => \r\n              React.createElement('option', { key: dept._id, value: dept._id }, dept.name)\r\n            )\r\n          )\r\n        ),\r\n        React.createElement('button', { type: 'submit', className: 'submit-btn' }, 'Add Doctor')\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderDepartmentForm = () => {\r\n    return React.createElement('div', { className: 'add-form-container' },\r\n      React.createElement('form', { onSubmit: handleAddDepartment, className: 'add-form' },\r\n        React.createElement('div', { className: 'form-group' },\r\n          React.createElement('input', {\r\n            type: 'text',\r\n            placeholder: 'Department Name',\r\n            value: newItem.name,\r\n            onChange: (e) => setNewItem({...newItem, name: e.target.value}),\r\n            required: true\r\n          })\r\n        ),\r\n        React.createElement('div', { className: 'form-group' },\r\n          React.createElement('textarea', {\r\n            placeholder: 'Description',\r\n            value: newItem.specialization,\r\n            onChange: (e) => setNewItem({...newItem, specialization: e.target.value}),\r\n            required: true\r\n          })\r\n        ),\r\n        React.createElement('button', { type: 'submit', className: 'submit-btn' }, 'Add Department')\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderDoctorsList = () => {\r\n    if (loading) {\r\n      return React.createElement('div', { className: 'loading-spinner' }, 'Loading...');\r\n    }\r\n    if (error) {\r\n      return React.createElement('div', { className: 'error-message' }, error);\r\n    }\r\n    return React.createElement('div', { className: 'doctors-grid' },\r\n      doctors.map(doctor => \r\n        React.createElement('div', { key: doctor._id, className: 'doctor-card' },\r\n          React.createElement('div', { className: 'doctor-header' },\r\n            React.createElement('h3', null, doctor.name),\r\n            React.createElement('span', { \r\n              className: `status-badge ${doctor.available ? 'available' : 'unavailable'}`\r\n            }, doctor.available ? 'Available' : 'Unavailable')\r\n          ),\r\n          React.createElement('div', { className: 'doctor-info' },\r\n            React.createElement('p', null, \r\n              React.createElement('strong', null, 'Email: '), \r\n              doctor.email\r\n            ),\r\n            React.createElement('p', null, \r\n              React.createElement('strong', null, 'Department: '), \r\n              doctor.department?.name || 'Not assigned'\r\n            ),\r\n            React.createElement('p', null, \r\n              React.createElement('strong', null, 'Specialization: '), \r\n              doctor.specialization\r\n            )\r\n          ),\r\n          React.createElement('div', { className: 'doctor-actions' },\r\n            React.createElement('button', {\r\n              className: 'edit-btn',\r\n              onClick: () => handleEditDoctor(doctor._id)\r\n            }, 'Edit'),\r\n            React.createElement('button', {\r\n              className: 'delete-btn',\r\n              onClick: () => handleDeleteDoctor(doctor._id)\r\n            }, 'Delete')\r\n          )\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderDepartmentsList = () => {\r\n    if (loading) {\r\n      return React.createElement('div', { className: 'loading-spinner' }, 'Loading...');\r\n    }\r\n    if (error) {\r\n      return React.createElement('div', { className: 'error-message' }, error);\r\n    }\r\n    return React.createElement('div', { className: 'departments-grid' },\r\n      departments.map(dept => \r\n        React.createElement('div', { key: dept._id, className: 'department-card' },\r\n          React.createElement('div', { className: 'department-header' },\r\n            React.createElement('h3', null, dept.name)\r\n          ),\r\n          React.createElement('div', { className: 'department-info' },\r\n            React.createElement('p', null, dept.description)\r\n          ),\r\n          React.createElement('div', { className: 'department-actions' },\r\n            React.createElement('button', {\r\n              className: 'edit-btn',\r\n              onClick: () => handleEditDepartment(dept._id)\r\n            }, 'Edit'),\r\n            React.createElement('button', {\r\n              className: 'delete-btn',\r\n              onClick: () => handleDeleteDepartment(dept._id)\r\n            }, 'Delete')\r\n          )\r\n        )\r\n      )\r\n    );\r\n  };\r\n\r\n  return React.createElement('div', { className: 'dashboard-container' },\r\n    React.createElement('header', { className: 'dashboard-header' },\r\n      React.createElement('div', { className: 'header-content' },\r\n        React.createElement('h1', null, 'Hospital Admin Dashboard'),\r\n        React.createElement('button', {\r\n          className: 'logout-btn',\r\n          onClick: handleLogout\r\n        }, 'Logout')\r\n      )\r\n    ),\r\n    React.createElement('div', { className: 'dashboard-stats' },\r\n      React.createElement('div', { className: 'stat-card' },\r\n        React.createElement('div', { className: 'stat-icon' }, '👨‍⚕️'),\r\n        React.createElement('div', { className: 'stat-info' },\r\n          React.createElement('h3', null, 'Total Doctors'),\r\n          React.createElement('p', null, doctors.length)\r\n        )\r\n      ),\r\n      React.createElement('div', { className: 'stat-card' },\r\n        React.createElement('div', { className: 'stat-icon' }, '🏥'),\r\n        React.createElement('div', { className: 'stat-info' },\r\n          React.createElement('h3', null, 'Departments'),\r\n          React.createElement('p', null, departments.length)\r\n        )\r\n      ),\r\n      React.createElement('div', { className: 'stat-card' },\r\n        React.createElement('div', { className: 'stat-icon' }, '📅'),\r\n        React.createElement('div', { className: 'stat-info' },\r\n          React.createElement('h3', null, 'Appointments'),\r\n          React.createElement('p', null, '0')\r\n        )\r\n      )\r\n    ),\r\n    React.createElement('div', { className: 'dashboard-content' },\r\n      React.createElement('div', { className: 'tab-navigation' },\r\n        React.createElement('button', {\r\n          className: `tab-btn ${activeTab === 'doctors' ? 'active' : ''}`,\r\n          onClick: () => setActiveTab('doctors')\r\n        }, 'Doctors'),\r\n        React.createElement('button', {\r\n          className: `tab-btn ${activeTab === 'departments' ? 'active' : ''}`,\r\n          onClick: () => setActiveTab('departments')\r\n        }, 'Departments')\r\n      ),\r\n      React.createElement('div', { className: 'tab-content' },\r\n        activeTab === 'doctors' && React.createElement('div', { className: 'doctors-section' },\r\n          React.createElement('div', { className: 'section-header' },\r\n            React.createElement('h2', null, 'Manage Doctors'),\r\n            React.createElement('button', {\r\n              className: 'add-btn',\r\n              onClick: () => setShowAddForm(!showAddForm)\r\n            }, showAddForm ? 'Cancel' : 'Add Doctor')\r\n          ),\r\n          showAddForm && renderDoctorForm(),\r\n          renderDoctorsList()\r\n        ),\r\n        activeTab === 'departments' && React.createElement('div', { className: 'departments-section' },\r\n          React.createElement('div', { className: 'section-header' },\r\n            React.createElement('h2', null, 'Manage Departments'),\r\n            React.createElement('button', {\r\n              className: 'add-btn',\r\n              onClick: () => setShowAddForm(!showAddForm)\r\n            }, showAddForm ? 'Cancel' : 'Add Department')\r\n          ),\r\n          showAddForm && renderDepartmentForm(),\r\n          renderDepartmentsList()\r\n        )\r\n      )\r\n    ),\r\n    success && React.createElement('div', { className: 'success-message' },\r\n      success,\r\n      React.createElement('button', {\r\n        onClick: () => setSuccess('')\r\n      }, '×')\r\n    )\r\n  );\r\n};\r\n\r\nexport default HospitalAdminDashboard; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AAErC,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2B,OAAO,EAAEC,UAAU,CAAC,GAAG5B,QAAQ,CAAC;IACrC6B,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEFhC,SAAS,CAAC,MAAM;IACd,MAAMiC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,MAAMP,IAAI,GAAGM,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE7C,IAAIF,QAAQ,KAAK,gBAAgB,IAAI,CAACG,UAAU,EAAE;MAChD/B,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEAkB,YAAY,CAACK,IAAI,IAAI,EAAE,CAAC;IACxBS,oBAAoB,CAACD,UAAU,CAAC;IAChCE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACjC,QAAQ,CAAC,CAAC;EAEd,MAAMgC,oBAAoB,GAAG,MAAOD,UAAU,IAAK;IACjD,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMrC,KAAK,CAACsC,GAAG,CAAC,4CAA4CJ,UAAU,EAAE,EAAE;QACzFK,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAG;MACtE,CAAC,CAAC;MACFd,WAAW,CAACkB,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZ/B,QAAQ,CAAC,EAAA8B,aAAA,GAAAD,GAAG,CAACL,QAAQ,cAAAM,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcF,IAAI,cAAAG,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,kCAAkC,CAAC;IAC7E;EACF,CAAC;EAED,MAAMT,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5BnB,UAAU,CAAC,IAAI,CAAC;IAChBJ,QAAQ,CAAC,EAAE,CAAC;IACZ,IAAI;MACF,MAAMqB,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MACrD,MAAMa,KAAK,GAAGd,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACC,UAAU,IAAI,CAACY,KAAK,EAAE;QACzB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;;MAEA;MACA,MAAMC,mBAAmB,GAAG,MAAMhD,KAAK,CAACsC,GAAG,CAAC,2CAA2CJ,UAAU,EAAE,EAAE;QACnGK,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUM,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIE,mBAAmB,CAACP,IAAI,EAAE;QAC5B9B,cAAc,CAACqC,mBAAmB,CAACP,IAAI,CAAC;MAC1C;;MAEA;MACA,MAAMQ,eAAe,GAAG,MAAMjD,KAAK,CAACsC,GAAG,CAAC,6CAA6CJ,UAAU,EAAE,EAAE;QACjGK,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUM,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIG,eAAe,CAACR,IAAI,EAAE;QACxBlC,UAAU,CAAC0C,eAAe,CAACR,IAAI,CAAC;MAClC;;MAEA;MACA,MAAMS,cAAc,GAAG,MAAMlD,KAAK,CAACsC,GAAG,CAAC,4CAA4CJ,UAAU,EAAE,EAAE;QAC/FK,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUM,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAII,cAAc,CAACT,IAAI,EAAE;QACvBhC,SAAS,CAACyC,cAAc,CAACT,IAAI,CAAC;MAChC;IAEF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZS,OAAO,CAACvC,KAAK,CAAC,sBAAsB,EAAE8B,GAAG,CAAC;MAC1C,IAAIA,GAAG,CAACL,QAAQ,EAAE;QAAA,IAAAe,mBAAA;QAChBvC,QAAQ,CAAC,EAAAuC,mBAAA,GAAAV,GAAG,CAACL,QAAQ,CAACI,IAAI,cAAAW,mBAAA,uBAAjBA,mBAAA,CAAmBP,OAAO,KAAI,kCAAkC,CAAC;MAC5E,CAAC,MAAM,IAAIH,GAAG,CAACW,OAAO,EAAE;QACtBxC,QAAQ,CAAC,kCAAkC,CAAC;MAC9C,CAAC,MAAM;QACLA,QAAQ,CAAC,8BAA8B,CAAC;MAC1C;IACF,CAAC,SAAS;MACRI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMqC,YAAY,GAAGA,CAAA,KAAM;IACzBtB,YAAY,CAACuB,KAAK,CAAC,CAAC;IACpBpD,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMqD,eAAe,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB7C,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF,MAAMmB,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MACrD,MAAMa,KAAK,GAAGd,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACC,UAAU,IAAI,CAACY,KAAK,EAAE;QACzB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMV,QAAQ,GAAG,MAAMrC,KAAK,CAAC2D,IAAI,CAAC,gDAAgD,EAAE;QAClF,GAAGnC,OAAO;QACVU,UAAU;QACV0B,IAAI,EAAE;MACR,CAAC,EAAE;QACDrB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUM,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIT,QAAQ,CAACI,IAAI,EAAE;QACjBlC,UAAU,CAACsD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAExB,QAAQ,CAACI,IAAI,CAAC,CAAC;QAC5C1B,UAAU,CAAC,2BAA2B,CAAC;QACvCU,UAAU,CAAC;UACTC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,EAAE;UACZC,YAAY,EAAE,EAAE;UAChBC,cAAc,EAAE;QAClB,CAAC,CAAC;QACFP,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MAAA,IAAAoB,cAAA,EAAAC,mBAAA;MACZZ,OAAO,CAACvC,KAAK,CAAC,sBAAsB,EAAE8B,GAAG,CAAC;MAC1C7B,QAAQ,CAAC,EAAAiD,cAAA,GAAApB,GAAG,CAACL,QAAQ,cAAAyB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcrB,IAAI,cAAAsB,mBAAA,uBAAlBA,mBAAA,CAAoBlB,OAAO,KAAI,sBAAsB,CAAC;IACjE;EACF,CAAC;EAED,MAAMmB,mBAAmB,GAAG,MAAOP,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB7C,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF,MAAMmB,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MACrD,MAAMa,KAAK,GAAGd,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAI,CAACC,UAAU,IAAI,CAACY,KAAK,EAAE;QACzB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEA,MAAMV,QAAQ,GAAG,MAAMrC,KAAK,CAAC2D,IAAI,CAAC,4CAA4C,EAAE;QAC9EjC,IAAI,EAAEF,OAAO,CAACE,IAAI;QAClBuC,WAAW,EAAEzC,OAAO,CAACM,cAAc;QACnCI;MACF,CAAC,EAAE;QACDK,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUM,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIT,QAAQ,CAACI,IAAI,EAAE;QACjB9B,cAAc,CAACkD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAExB,QAAQ,CAACI,IAAI,CAAC,CAAC;QAChD1B,UAAU,CAAC,+BAA+B,CAAC;QAC3CU,UAAU,CAAC;UACTC,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE,EAAE;UACTC,QAAQ,EAAE,EAAE;UACZC,YAAY,EAAE,EAAE;UAChBC,cAAc,EAAE;QAClB,CAAC,CAAC;QACFP,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MAAA,IAAAwB,cAAA,EAAAC,mBAAA;MACZhB,OAAO,CAACvC,KAAK,CAAC,0BAA0B,EAAE8B,GAAG,CAAC;MAC9C7B,QAAQ,CAAC,EAAAqD,cAAA,GAAAxB,GAAG,CAACL,QAAQ,cAAA6B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAczB,IAAI,cAAA0B,mBAAA,uBAAlBA,mBAAA,CAAoBtB,OAAO,KAAI,0BAA0B,CAAC;IACrE;EACF,CAAC;EAED,MAAMuB,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,8CAA8C,CAAC,EAAE;IAErE,IAAI;MACF,MAAMvE,KAAK,CAACwE,MAAM,CAAC,oCAAoCH,QAAQ,EAAE,EAAE;QACjE9B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAG;MACtE,CAAC,CAAC;MACF1B,UAAU,CAACsD,IAAI,IAAIA,IAAI,CAACY,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKN,QAAQ,CAAC,CAAC;MACxDtD,UAAU,CAAC,6BAA6B,CAAC;IAC3C,CAAC,CAAC,OAAO2B,GAAG,EAAE;MAAA,IAAAkC,cAAA,EAAAC,mBAAA;MACZhE,QAAQ,CAAC,EAAA+D,cAAA,GAAAlC,GAAG,CAACL,QAAQ,cAAAuC,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcnC,IAAI,cAAAoC,mBAAA,uBAAlBA,mBAAA,CAAoBhC,OAAO,KAAI,yBAAyB,CAAC;IACpE;EACF,CAAC;EAED,MAAMiC,sBAAsB,GAAG,MAAOjD,YAAY,IAAK;IACrD,IAAI,CAACyC,MAAM,CAACC,OAAO,CAAC,kDAAkD,CAAC,EAAE;IAEzE,IAAI;MACF,MAAMvE,KAAK,CAACwE,MAAM,CAAC,kCAAkC3C,YAAY,EAAE,EAAE;QACnEU,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAAG;MACtE,CAAC,CAAC;MACFtB,cAAc,CAACkD,IAAI,IAAIA,IAAI,CAACY,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAK9C,YAAY,CAAC,CAAC;MAChEd,UAAU,CAAC,iCAAiC,CAAC;IAC/C,CAAC,CAAC,OAAO2B,GAAG,EAAE;MAAA,IAAAqC,cAAA,EAAAC,mBAAA;MACZnE,QAAQ,CAAC,EAAAkE,cAAA,GAAArC,GAAG,CAACL,QAAQ,cAAA0C,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAActC,IAAI,cAAAuC,mBAAA,uBAAlBA,mBAAA,CAAoBnC,OAAO,KAAI,6BAA6B,CAAC;IACxE;EACF,CAAC;EAED,MAAMoC,gBAAgB,GAAG,MAAOZ,QAAQ,IAAK;IAC3C;IACAlB,OAAO,CAAC+B,GAAG,CAAC,cAAc,EAAEb,QAAQ,CAAC;EACvC,CAAC;EAED,MAAMc,oBAAoB,GAAG,MAAOtD,YAAY,IAAK;IACnD;IACAsB,OAAO,CAAC+B,GAAG,CAAC,kBAAkB,EAAErD,YAAY,CAAC;EAC/C,CAAC;EAED,MAAMuD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,oBAAOxF,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAqB,CAAC,eACnE1F,KAAK,CAACyF,aAAa,CAAC,MAAM,EAAE;MAAEE,QAAQ,EAAE/B,eAAe;MAAE8B,SAAS,EAAE;IAAW,CAAC,eAC9E1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAa,CAAC,eACpD1F,KAAK,CAACyF,aAAa,CAAC,OAAO,EAAE;MAC3BG,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE,MAAM;MACnBC,KAAK,EAAElE,OAAO,CAACE,IAAI;MACnBiE,QAAQ,EAAGlC,CAAC,IAAKhC,UAAU,CAAC;QAAC,GAAGD,OAAO;QAAEE,IAAI,EAAE+B,CAAC,CAACmC,MAAM,CAACF;MAAK,CAAC,CAAC;MAC/DG,QAAQ,EAAE;IACZ,CAAC,CACH,CAAC,eACDjG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAa,CAAC,eACpD1F,KAAK,CAACyF,aAAa,CAAC,OAAO,EAAE;MAC3BG,IAAI,EAAE,OAAO;MACbC,WAAW,EAAE,OAAO;MACpBC,KAAK,EAAElE,OAAO,CAACG,KAAK;MACpBgE,QAAQ,EAAGlC,CAAC,IAAKhC,UAAU,CAAC;QAAC,GAAGD,OAAO;QAAEG,KAAK,EAAE8B,CAAC,CAACmC,MAAM,CAACF;MAAK,CAAC,CAAC;MAChEG,QAAQ,EAAE;IACZ,CAAC,CACH,CAAC,eACDjG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAa,CAAC,eACpD1F,KAAK,CAACyF,aAAa,CAAC,OAAO,EAAE;MAC3BG,IAAI,EAAE,UAAU;MAChBC,WAAW,EAAE,UAAU;MACvBC,KAAK,EAAElE,OAAO,CAACI,QAAQ;MACvB+D,QAAQ,EAAGlC,CAAC,IAAKhC,UAAU,CAAC;QAAC,GAAGD,OAAO;QAAEI,QAAQ,EAAE6B,CAAC,CAACmC,MAAM,CAACF;MAAK,CAAC,CAAC;MACnEG,QAAQ,EAAE;IACZ,CAAC,CACH,CAAC,eACDjG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAa,CAAC,eACpD1F,KAAK,CAACyF,aAAa,CAAC,OAAO,EAAE;MAC3BG,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE,gBAAgB;MAC7BC,KAAK,EAAElE,OAAO,CAACM,cAAc;MAC7B6D,QAAQ,EAAGlC,CAAC,IAAKhC,UAAU,CAAC;QAAC,GAAGD,OAAO;QAAEM,cAAc,EAAE2B,CAAC,CAACmC,MAAM,CAACF;MAAK,CAAC,CAAC;MACzEG,QAAQ,EAAE;IACZ,CAAC,CACH,CAAC,eACDjG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAa,CAAC,eACpD1F,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;MAC5BK,KAAK,EAAElE,OAAO,CAACK,YAAY;MAC3B8D,QAAQ,EAAGlC,CAAC,IAAKhC,UAAU,CAAC;QAAC,GAAGD,OAAO;QAAEK,YAAY,EAAE4B,CAAC,CAACmC,MAAM,CAACF;MAAK,CAAC,CAAC;MACvEG,QAAQ,EAAE;IACZ,CAAC,eACCjG,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;MAAEK,KAAK,EAAE;IAAG,CAAC,EAAE,mBAAmB,CAAC,EACjEhF,WAAW,CAACoF,GAAG,CAACC,IAAI,iBAClBnG,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;MAAEW,GAAG,EAAED,IAAI,CAACpB,GAAG;MAAEe,KAAK,EAAEK,IAAI,CAACpB;IAAI,CAAC,EAAEoB,IAAI,CAACrE,IAAI,CAC7E,CACF,CACF,CAAC,eACD9B,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;MAAEG,IAAI,EAAE,QAAQ;MAAEF,SAAS,EAAE;IAAa,CAAC,EAAE,YAAY,CACzF,CACF,CAAC;EACH,CAAC;EAED,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;IACjC,oBAAOrG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAqB,CAAC,eACnE1F,KAAK,CAACyF,aAAa,CAAC,MAAM,EAAE;MAAEE,QAAQ,EAAEvB,mBAAmB;MAAEsB,SAAS,EAAE;IAAW,CAAC,eAClF1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAa,CAAC,eACpD1F,KAAK,CAACyF,aAAa,CAAC,OAAO,EAAE;MAC3BG,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE,iBAAiB;MAC9BC,KAAK,EAAElE,OAAO,CAACE,IAAI;MACnBiE,QAAQ,EAAGlC,CAAC,IAAKhC,UAAU,CAAC;QAAC,GAAGD,OAAO;QAAEE,IAAI,EAAE+B,CAAC,CAACmC,MAAM,CAACF;MAAK,CAAC,CAAC;MAC/DG,QAAQ,EAAE;IACZ,CAAC,CACH,CAAC,eACDjG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAa,CAAC,eACpD1F,KAAK,CAACyF,aAAa,CAAC,UAAU,EAAE;MAC9BI,WAAW,EAAE,aAAa;MAC1BC,KAAK,EAAElE,OAAO,CAACM,cAAc;MAC7B6D,QAAQ,EAAGlC,CAAC,IAAKhC,UAAU,CAAC;QAAC,GAAGD,OAAO;QAAEM,cAAc,EAAE2B,CAAC,CAACmC,MAAM,CAACF;MAAK,CAAC,CAAC;MACzEG,QAAQ,EAAE;IACZ,CAAC,CACH,CAAC,eACDjG,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;MAAEG,IAAI,EAAE,QAAQ;MAAEF,SAAS,EAAE;IAAa,CAAC,EAAE,gBAAgB,CAC7F,CACF,CAAC;EACH,CAAC;EAED,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIlF,OAAO,EAAE;MACX,oBAAOpB,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAkB,CAAC,EAAE,YAAY,CAAC;IACnF;IACA,IAAI1E,KAAK,EAAE;MACT,oBAAOhB,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAgB,CAAC,EAAE1E,KAAK,CAAC;IAC1E;IACA,oBAAOhB,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAe,CAAC,EAC7DhF,OAAO,CAACwF,GAAG,CAACK,MAAM;MAAA,IAAAC,kBAAA;MAAA,oBAChBxG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEW,GAAG,EAAEG,MAAM,CAACxB,GAAG;QAAEW,SAAS,EAAE;MAAc,CAAC,eACtE1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAgB,CAAC,eACvD1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAEc,MAAM,CAACzE,IAAI,CAAC,eAC5C9B,KAAK,CAACyF,aAAa,CAAC,MAAM,EAAE;QAC1BC,SAAS,EAAE,gBAAgBa,MAAM,CAACE,SAAS,GAAG,WAAW,GAAG,aAAa;MAC3E,CAAC,EAAEF,MAAM,CAACE,SAAS,GAAG,WAAW,GAAG,aAAa,CACnD,CAAC,eACDzG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAc,CAAC,eACrD1F,KAAK,CAACyF,aAAa,CAAC,GAAG,EAAE,IAAI,eAC3BzF,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,SAAS,CAAC,EAC9Cc,MAAM,CAACxE,KACT,CAAC,eACD/B,KAAK,CAACyF,aAAa,CAAC,GAAG,EAAE,IAAI,eAC3BzF,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,cAAc,CAAC,EACnD,EAAAe,kBAAA,GAAAD,MAAM,CAACG,UAAU,cAAAF,kBAAA,uBAAjBA,kBAAA,CAAmB1E,IAAI,KAAI,cAC7B,CAAC,eACD9B,KAAK,CAACyF,aAAa,CAAC,GAAG,EAAE,IAAI,eAC3BzF,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,kBAAkB,CAAC,EACvDc,MAAM,CAACrE,cACT,CACF,CAAC,eACDlC,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAiB,CAAC,eACxD1F,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;QAC5BC,SAAS,EAAE,UAAU;QACrBiB,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACkB,MAAM,CAACxB,GAAG;MAC5C,CAAC,EAAE,MAAM,CAAC,eACV/E,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;QAC5BC,SAAS,EAAE,YAAY;QACvBiB,OAAO,EAAEA,CAAA,KAAMnC,kBAAkB,CAAC+B,MAAM,CAACxB,GAAG;MAC9C,CAAC,EAAE,QAAQ,CACb,CACF,CAAC;IAAA,CACH,CACF,CAAC;EACH,CAAC;EAED,MAAM6B,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAIxF,OAAO,EAAE;MACX,oBAAOpB,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAkB,CAAC,EAAE,YAAY,CAAC;IACnF;IACA,IAAI1E,KAAK,EAAE;MACT,oBAAOhB,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAgB,CAAC,EAAE1E,KAAK,CAAC;IAC1E;IACA,oBAAOhB,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAmB,CAAC,EACjE5E,WAAW,CAACoF,GAAG,CAACC,IAAI,iBAClBnG,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEW,GAAG,EAAED,IAAI,CAACpB,GAAG;MAAEW,SAAS,EAAE;IAAkB,CAAC,eACxE1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAoB,CAAC,eAC3D1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAEU,IAAI,CAACrE,IAAI,CAC3C,CAAC,eACD9B,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAkB,CAAC,eACzD1F,KAAK,CAACyF,aAAa,CAAC,GAAG,EAAE,IAAI,EAAEU,IAAI,CAAC9B,WAAW,CACjD,CAAC,eACDrE,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAqB,CAAC,eAC5D1F,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;MAC5BC,SAAS,EAAE,UAAU;MACrBiB,OAAO,EAAEA,CAAA,KAAMpB,oBAAoB,CAACY,IAAI,CAACpB,GAAG;IAC9C,CAAC,EAAE,MAAM,CAAC,eACV/E,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;MAC5BC,SAAS,EAAE,YAAY;MACvBiB,OAAO,EAAEA,CAAA,KAAMzB,sBAAsB,CAACiB,IAAI,CAACpB,GAAG;IAChD,CAAC,EAAE,QAAQ,CACb,CACF,CACF,CACF,CAAC;EACH,CAAC;EAED,oBAAO/E,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAsB,CAAC,eACpE1F,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;IAAEC,SAAS,EAAE;EAAmB,CAAC,eAC7D1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAiB,CAAC,eACxD1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,0BAA0B,CAAC,eAC3DzF,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;IAC5BC,SAAS,EAAE,YAAY;IACvBiB,OAAO,EAAEjD;EACX,CAAC,EAAE,QAAQ,CACb,CACF,CAAC,eACD1D,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAkB,CAAC,eACzD1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,eACnD1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,EAAE,OAAO,CAAC,eAC/D1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,eACnD1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,eAChDzF,KAAK,CAACyF,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE/E,OAAO,CAACmG,MAAM,CAC/C,CACF,CAAC,eACD7G,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,eACnD1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,EAAE,IAAI,CAAC,eAC5D1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,eACnD1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,eAC9CzF,KAAK,CAACyF,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE3E,WAAW,CAAC+F,MAAM,CACnD,CACF,CAAC,eACD7G,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,eACnD1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,EAAE,IAAI,CAAC,eAC5D1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAY,CAAC,eACnD1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,cAAc,CAAC,eAC/CzF,KAAK,CAACyF,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CACpC,CACF,CACF,CAAC,eACDzF,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAoB,CAAC,eAC3D1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAiB,CAAC,eACxD1F,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;IAC5BC,SAAS,EAAE,WAAWlF,SAAS,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,EAAE;IAC/DmG,OAAO,EAAEA,CAAA,KAAMlG,YAAY,CAAC,SAAS;EACvC,CAAC,EAAE,SAAS,CAAC,eACbT,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;IAC5BC,SAAS,EAAE,WAAWlF,SAAS,KAAK,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAE;IACnEmG,OAAO,EAAEA,CAAA,KAAMlG,YAAY,CAAC,aAAa;EAC3C,CAAC,EAAE,aAAa,CAClB,CAAC,eACDT,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAc,CAAC,EACrDlF,SAAS,KAAK,SAAS,iBAAIR,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAkB,CAAC,eACpF1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAiB,CAAC,eACxD1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,gBAAgB,CAAC,eACjDzF,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;IAC5BC,SAAS,EAAE,SAAS;IACpBiB,OAAO,EAAEA,CAAA,KAAMhF,cAAc,CAAC,CAACD,WAAW;EAC5C,CAAC,EAAEA,WAAW,GAAG,QAAQ,GAAG,YAAY,CAC1C,CAAC,EACDA,WAAW,IAAI8D,gBAAgB,CAAC,CAAC,EACjCc,iBAAiB,CAAC,CACpB,CAAC,EACD9F,SAAS,KAAK,aAAa,iBAAIR,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAsB,CAAC,eAC5F1F,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAiB,CAAC,eACxD1F,KAAK,CAACyF,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,oBAAoB,CAAC,eACrDzF,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;IAC5BC,SAAS,EAAE,SAAS;IACpBiB,OAAO,EAAEA,CAAA,KAAMhF,cAAc,CAAC,CAACD,WAAW;EAC5C,CAAC,EAAEA,WAAW,GAAG,QAAQ,GAAG,gBAAgB,CAC9C,CAAC,EACDA,WAAW,IAAI2E,oBAAoB,CAAC,CAAC,EACrCO,qBAAqB,CAAC,CACxB,CACF,CACF,CAAC,EACD1F,OAAO,iBAAIlB,KAAK,CAACyF,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAkB,CAAC,EACpExE,OAAO,eACPlB,KAAK,CAACyF,aAAa,CAAC,QAAQ,EAAE;IAC5BkB,OAAO,EAAEA,CAAA,KAAMxF,UAAU,CAAC,EAAE;EAC9B,CAAC,EAAE,GAAG,CACR,CACF,CAAC;AACH,CAAC;AAACb,EAAA,CAndID,sBAAsB;EAAA,QACTF,WAAW;AAAA;AAAA2G,EAAA,GADxBzG,sBAAsB;AAqd5B,eAAeA,sBAAsB;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}