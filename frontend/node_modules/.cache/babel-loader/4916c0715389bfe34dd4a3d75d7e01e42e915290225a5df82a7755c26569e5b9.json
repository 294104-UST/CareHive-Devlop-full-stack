{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Capstone\\\\frontend\\\\src\\\\components\\\\SuperAdminDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './SuperAdminDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SuperAdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [hospitals, setHospitals] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [newHospital, setNewHospital] = useState({\n    name: '',\n    location: '',\n    description: ''\n  });\n  const [editingHospital, setEditingHospital] = useState(null);\n  const [newAdmin, setNewAdmin] = useState({\n    name: '',\n    email: '',\n    password: '',\n    hospitalId: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [activeTab, setActiveTab] = useState('hospitals');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const userRole = localStorage.getItem('userRole');\n    if (userRole !== 'SUPER_ADMIN') {\n      navigate('/login');\n      return;\n    }\n    fetchHospitals();\n    fetchAdmins();\n  }, [navigate]);\n  const fetchHospitals = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const response = await axios.get('http://localhost:3000/api/auth/hospitals', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setHospitals(response.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch hospitals');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchAdmins = async () => {\n    try {\n      const response = await axios.get('http://localhost:3000/api/auth/admins', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setAdmins(response.data);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to fetch admins');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate('/login');\n  };\n  const handleAddHospital = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      const response = await axios.post('http://localhost:3000/api/auth/hospitals', newHospital, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setHospitals([...hospitals, response.data]);\n      setNewHospital({\n        name: '',\n        location: '',\n        description: ''\n      });\n      setSuccess('Hospital added successfully');\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to add hospital');\n    }\n  };\n  const handleEditHospital = async e => {\n    e.preventDefault();\n    if (!editingHospital) return;\n    setError('');\n    setSuccess('');\n    try {\n      const response = await axios.put(`http://localhost:3000/api/auth/hospitals/${editingHospital._id}`, editingHospital, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setHospitals(hospitals.map(hospital => hospital._id === editingHospital._id ? response.data : hospital));\n      setEditingHospital(null);\n      setSuccess('Hospital updated successfully');\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to update hospital');\n    }\n  };\n  const handleDeleteHospital = async hospitalId => {\n    if (!window.confirm('Are you sure you want to delete this hospital?')) return;\n    setError('');\n    setSuccess('');\n    try {\n      await axios.delete(`http://localhost:3000/api/auth/hospitals/${hospitalId}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setHospitals(hospitals.filter(h => h._id !== hospitalId));\n      setSuccess('Hospital deleted successfully');\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to delete hospital');\n    }\n  };\n  const handleAddAdmin = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    try {\n      await axios.post('http://localhost:3000/api/auth/create-admin', {\n        ...newAdmin,\n        role: 'HOSPITAL_ADMIN'\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setSuccess('Hospital admin created successfully');\n      setNewAdmin({\n        name: '',\n        email: '',\n        password: '',\n        hospitalId: ''\n      });\n      fetchAdmins();\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Failed to create hospital admin');\n    }\n  };\n  const handleHospitalInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingHospital) {\n      setEditingHospital(prev => prev ? {\n        ...prev,\n        [name]: value\n      } : null);\n    } else {\n      setNewHospital(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleAdminInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewAdmin(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"super-admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Super Admin Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'hospitals' ? 'active' : ''}`,\n          onClick: () => setActiveTab('hospitals'),\n          children: \"Manage Hospitals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'admins' ? 'active' : ''}`,\n          onClick: () => setActiveTab('admins'),\n          children: \"Manage Hospital Admins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this), activeTab === 'hospitals' ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"add-admin-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Hospital Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddAdmin,\n          className: \"add-admin-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"adminName\",\n              children: \"Admin Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"adminName\",\n              name: \"name\",\n              value: newAdmin.name,\n              onChange: handleAdminInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"adminEmail\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"adminEmail\",\n              name: \"email\",\n              value: newAdmin.email,\n              onChange: handleAdminInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"adminPassword\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"adminPassword\",\n              name: \"password\",\n              value: newAdmin.password,\n              onChange: handleAdminInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"hospitalId\",\n              children: \"Select Hospital:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"hospitalId\",\n              name: \"hospitalId\",\n              value: newAdmin.hospitalId,\n              onChange: handleAdminInputChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a hospital\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), hospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: hospital._id,\n                children: hospital.name\n              }, hospital._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"add-button\",\n            children: \"Create Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"admins-list-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Hospital Admins List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), admins.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No admins found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [admin.name, \" - \", admin.email, \" (Hospital ID: \", admin.hospitalId, \")\"]\n            }, admin._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(SuperAdminDashboard, \"l/7xNZucYr1/q+IWDg7RSkOd37A=\", false, function () {\n  return [useNavigate];\n});\n_c = SuperAdminDashboard;\nexport default SuperAdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"SuperAdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SuperAdminDashboard","_s","navigate","hospitals","setHospitals","admins","setAdmins","newHospital","setNewHospital","name","location","description","editingHospital","setEditingHospital","newAdmin","setNewAdmin","email","password","hospitalId","error","setError","success","setSuccess","activeTab","setActiveTab","loading","setLoading","userRole","localStorage","getItem","fetchHospitals","fetchAdmins","response","get","headers","Authorization","data","err","_err$response","_err$response$data","message","_err$response2","_err$response2$data","handleLogout","clear","handleAddHospital","e","preventDefault","post","_err$response3","_err$response3$data","handleEditHospital","put","_id","map","hospital","_err$response4","_err$response4$data","handleDeleteHospital","window","confirm","delete","filter","h","_err$response5","_err$response5$data","handleAddAdmin","role","_err$response6","_err$response6$data","handleHospitalInputChange","value","target","prev","handleAdminInputChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","type","id","onChange","required","length","admin","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Capstone/frontend/src/components/SuperAdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './SuperAdminDashboard.css';\r\n\r\ninterface Hospital {\r\n  _id: string;\r\n  name: string;\r\n  location: string;\r\n  description: string;\r\n}\r\n\r\ninterface HospitalAdmin {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n  hospitalId: string;\r\n}\r\n\r\nconst SuperAdminDashboard: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [hospitals, setHospitals] = useState<Hospital[]>([]);\r\n  const [admins, setAdmins] = useState<HospitalAdmin[]>([]);\r\n  const [newHospital, setNewHospital] = useState({\r\n    name: '',\r\n    location: '',\r\n    description: '',\r\n  });\r\n  const [editingHospital, setEditingHospital] = useState<Hospital | null>(null);\r\n  const [newAdmin, setNewAdmin] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    hospitalId: '',\r\n  });\r\n  const [error, setError] = useState<string>('');\r\n  const [success, setSuccess] = useState<string>('');\r\n  const [activeTab, setActiveTab] = useState<'hospitals' | 'admins'>('hospitals');\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const userRole = localStorage.getItem('userRole');\r\n    if (userRole !== 'SUPER_ADMIN') {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    fetchHospitals();\r\n    fetchAdmins();\r\n  }, [navigate]);\r\n\r\n  const fetchHospitals = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/auth/hospitals', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        }\r\n      });\r\n      setHospitals(response.data);\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to fetch hospitals');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchAdmins = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3000/api/auth/admins', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        }\r\n      });\r\n      setAdmins(response.data);\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to fetch admins');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleAddHospital = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      const response = await axios.post('http://localhost:3000/api/auth/hospitals', newHospital, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        }\r\n      });\r\n      setHospitals([...hospitals, response.data]);\r\n      setNewHospital({ name: '', location: '', description: '' });\r\n      setSuccess('Hospital added successfully');\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to add hospital');\r\n    }\r\n  };\r\n\r\n  const handleEditHospital = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!editingHospital) return;\r\n\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:3000/api/auth/hospitals/${editingHospital._id}`,\r\n        editingHospital,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n          }\r\n        }\r\n      );\r\n      setHospitals(hospitals.map(hospital => \r\n        hospital._id === editingHospital._id ? response.data : hospital\r\n      ));\r\n      setEditingHospital(null);\r\n      setSuccess('Hospital updated successfully');\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to update hospital');\r\n    }\r\n  };\r\n\r\n  const handleDeleteHospital = async (hospitalId: string) => {\r\n    if (!window.confirm('Are you sure you want to delete this hospital?')) return;\r\n\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:3000/api/auth/hospitals/${hospitalId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        }\r\n      });\r\n      setHospitals(hospitals.filter(h => h._id !== hospitalId));\r\n      setSuccess('Hospital deleted successfully');\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to delete hospital');\r\n    }\r\n  };\r\n\r\n  const handleAddAdmin = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    try {\r\n      await axios.post('http://localhost:3000/api/auth/create-admin', {\r\n        ...newAdmin,\r\n        role: 'HOSPITAL_ADMIN',\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n        }\r\n      });\r\n      setSuccess('Hospital admin created successfully');\r\n      setNewAdmin({ name: '', email: '', password: '', hospitalId: '' });\r\n      fetchAdmins();\r\n    } catch (err: any) {\r\n      setError(err.response?.data?.message || 'Failed to create hospital admin');\r\n    }\r\n  };\r\n\r\n  const handleHospitalInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    if (editingHospital) {\r\n      setEditingHospital(prev => prev ? { ...prev, [name]: value } : null);\r\n    } else {\r\n      setNewHospital(prev => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleAdminInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    setNewAdmin(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"super-admin-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>Super Admin Dashboard</h1>\r\n        <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n      </header>\r\n\r\n      <main className=\"dashboard-content\">\r\n        <div className=\"tabs\">\r\n          <button \r\n            className={`tab-button ${activeTab === 'hospitals' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('hospitals')}\r\n          >\r\n            Manage Hospitals\r\n          </button>\r\n          <button \r\n            className={`tab-button ${activeTab === 'admins' ? 'active' : ''}`}\r\n            onClick={() => setActiveTab('admins')}\r\n          >\r\n            Manage Hospital Admins\r\n          </button>\r\n        </div>\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        {success && <div className=\"success-message\">{success}</div>}\r\n\r\n        {activeTab === 'hospitals' ? (\r\n          <>\r\n            {/* Hospital management section (unchanged) */}\r\n          </>\r\n        ) : (\r\n          <section className=\"add-admin-section\">\r\n            <h2>Create Hospital Admin</h2>\r\n            <form onSubmit={handleAddAdmin} className=\"add-admin-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"adminName\">Admin Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"adminName\"\r\n                  name=\"name\"\r\n                  value={newAdmin.name}\r\n                  onChange={handleAdminInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"adminEmail\">Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"adminEmail\"\r\n                  name=\"email\"\r\n                  value={newAdmin.email}\r\n                  onChange={handleAdminInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"adminPassword\">Password:</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"adminPassword\"\r\n                  name=\"password\"\r\n                  value={newAdmin.password}\r\n                  onChange={handleAdminInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"hospitalId\">Select Hospital:</label>\r\n                <select\r\n                  id=\"hospitalId\"\r\n                  name=\"hospitalId\"\r\n                  value={newAdmin.hospitalId}\r\n                  onChange={handleAdminInputChange}\r\n                  required\r\n                >\r\n                  <option value=\"\">Select a hospital</option>\r\n                  {hospitals.map(hospital => (\r\n                    <option key={hospital._id} value={hospital._id}>\r\n                      {hospital.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button type=\"submit\" className=\"add-button\">Create Admin</button>\r\n            </form>\r\n\r\n            <section className=\"admins-list-section\">\r\n              <h2>Hospital Admins List</h2>\r\n              {admins.length === 0 ? (\r\n                <p>No admins found.</p>\r\n              ) : (\r\n                <ul>\r\n                  {admins.map(admin => (\r\n                    <li key={admin._id}>\r\n                      {admin.name} - {admin.email} (Hospital ID: {admin.hospitalId})\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </section>\r\n          </section>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuperAdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}