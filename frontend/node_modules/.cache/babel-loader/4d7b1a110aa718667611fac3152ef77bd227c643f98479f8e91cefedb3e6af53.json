{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\final project\\\\Capstone\\\\frontend\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// WebSocket connection handling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ws = new WebSocket('ws://localhost:3004/ws');\nws.onerror = error => {\n  console.warn('WebSocket connection error:', error);\n  // Don't show error to user as it's not critical\n};\nws.onclose = () => {\n  console.log('WebSocket connection closed');\n  // Attempt to reconnect after 5 seconds\n  setTimeout(() => {\n    window.location.reload();\n  }, 5000);\n};\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","ws","WebSocket","onerror","error","console","warn","onclose","log","setTimeout","window","location","reload","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Administrator/Desktop/final project/Capstone/frontend/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// WebSocket connection handling\r\nconst ws = new WebSocket('ws://localhost:3004/ws');\r\n\r\nws.onerror = (error) => {\r\n  console.warn('WebSocket connection error:', error);\r\n  // Don't show error to user as it's not critical\r\n};\r\n\r\nws.onclose = () => {\r\n  console.log('WebSocket connection closed');\r\n  // Attempt to reconnect after 5 seconds\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 5000);\r\n};\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(); "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,wBAAwB,CAAC;AAElDD,EAAE,CAACE,OAAO,GAAIC,KAAK,IAAK;EACtBC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEF,KAAK,CAAC;EAClD;AACF,CAAC;AAEDH,EAAE,CAACM,OAAO,GAAG,MAAM;EACjBF,OAAO,CAACG,GAAG,CAAC,6BAA6B,CAAC;EAC1C;EACAC,UAAU,CAAC,MAAM;IACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;EAC1B,CAAC,EAAE,IAAI,CAAC;AACV,CAAC;AAED,MAAMC,IAAI,GAAGjB,QAAQ,CAACkB,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAEDH,IAAI,CAACI,MAAM,cACTjB,OAAA,CAACL,KAAK,CAACuB,UAAU;EAAAC,QAAA,eACfnB,OAAA,CAACH,GAAG;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACAzB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}